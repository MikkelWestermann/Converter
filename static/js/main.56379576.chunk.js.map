{"version":3,"sources":["Components/Navigator/Navigator.js","Components/Header/Header.js","Components/InputField/InputField.js","Components/Base/Base.js","Components/ColorInput/ColorInput.js","Components/Colors/Colors.js","Components/Distance/Distance.js","Components/Unicode/UnicodeData.js","Components/ListItem/ListItem.js","Components/Unicode/Unicode.js","App.js","serviceWorker.js","index.js"],"names":["Navigator","_this","this","react_default","a","createElement","className","concat","props","route","onClick","onRouteChange","Component","Header","_ref","from","Components_Navigator_Navigator","InputField","onInputChange","e","handleInputChange","inputName","htmlFor","value","input","onChange","id","hex","base64","binary","makeSet","name","mySet","Set","i","length","add","hexSet","base64Set","Base","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDecimal","setState","decimal","hexadecimal","convertToBase","handleHexadecimal","decimalVal","convertToDecimal","handleBinary","handleBase64","target","parseInt","has","handleHex","state","Components_InputField_InputField","rgbSet","ColorInput","isHex","change","brightness","placeholder","inputVal","Colors","handleRGB","arr","replace","split","result","forEach","item","hexVal","push","slice","convertedVals","map","val","undefined","onColorChange","rgb","getBrightness","number","isNaN","reduce","b","getValidColor","color","style","backgroundColor","Components_ColorInput_ColorInput","Distance","convertDistance","constant","parseFloat","handleDistanceChange","meters","meter","kilometer","centimeter","millimeter","micrometer","nanometer","_this2","entries","_ref2","slicedToArray","key","data","char","unicode","ListItem","Unicode","handleToBinary","handleToUnicode","bytes","match","j","twoBytes","closeList","showList","openList","Components_ListItem_ListItem","App","base","baseName","newValue","Math","floor","curResult","toString","reverse","index","pow","Components_Header_Header","Components_Base_Base","Components_Colors_Colors","Components_Distance_Distance","Components_Unicode_Unicode","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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D,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,KACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,YAEf,CACID,KAAQ,IACRC,QAAW,aAGnB,CACE,CACID,KAAQ,SACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC,QAAW,oBAEf,CACID,KAAQ,OACRC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","file":"static/js/main.56379576.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Navigator.css';\n\nclass Navigator extends Component {\n  render() {\n    return (\n      <nav>\n        <div className='one'>\n          <div className={`navLinks ${this.props.route === 'base' && 'active'}`} onClick={() => this.props.onRouteChange('base')}>Base</div>\n        </div>\n        <div className='two'>\n          <div className={`navLinks ${this.props.route === 'colors' && 'active'}`} onClick={() => this.props.onRouteChange('colors')}>Colors</div>\n        </div>\n        <div className='three'>\n          <div className={`navLinks ${this.props.route === 'distance' && 'active'}`} onClick={() => this.props.onRouteChange('distance')}>Distance</div>\n        </div>\n        <div className='four'>\n          <div className={`navLinks ${this.props.route === 'unicode' && 'active'}`} onClick={() => this.props.onRouteChange('unicode')}>Unicode</div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigator;\n","import React from 'react';\nimport Navigator from '../Navigator/Navigator';\nimport './Header.css';\n\nconst Header = ({ from, route, onRouteChange }) => {\n  return (\n    <div>\n      <div className='header'>\n        <h1>Converter</h1>\n        <h2>Convert <span>{from}</span></h2>\n      </div>\n      <Navigator onRouteChange={onRouteChange} route={route} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './InputField.css';\n\nclass InputField extends Component {\n  onInputChange = (e) => {\n    this.props.handleInputChange(e, this.props.inputName);\n  }\n  render() {\n    return (\n      <div className='inputField'>\n        <label htmlFor={this.props.inputName} className='inputFieldLabel'> {this.props.inputName} </label>\n        <input value={this.props.input} onChange={this.onInputChange} id={this.props.inputName} />\n      </div>\n    );\n  }\n}\n\nexport default InputField;\n","import React, { Component } from 'react';\nimport InputField from '../InputField/InputField';\n\nconst hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nconst base64 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'];\nconst binary = ['0', '1'];\n\nconst makeSet = name => {\n  const mySet = new Set();\n  for (let i = 0; i < name.length; i++) {\n    mySet.add(name[i]);\n  }\n  return mySet;\n}\n\nconst hexSet = makeSet(hex);\nconst base64Set = makeSet(base64);\n\nclass Base extends Component {\n  constructor() {\n    super();\n    this.state = {\n      decimal: '',\n      hexadecimal: '',\n      binary: '',\n      base64: ''\n    }\n  }\n  handleDecimal = value => {\n    this.setState({\n      decimal: value,\n      hexadecimal: this.props.convertToBase(value, '', 16, hex),\n      binary: this.props.convertToBase(value, '', 2, binary),\n      base64: this.props.convertToBase(value, '', 64, base64)\n    });\n  }\n  handleHexadecimal = value => {\n    const decimalVal = this.props.convertToDecimal(value, 16, hex);\n    this.setState({\n      decimal: decimalVal,\n      hexadecimal: value,\n      binary: this.props.convertToBase(decimalVal, '', 2, binary),\n      base64: this.props.convertToBase(decimalVal, '', 64, base64)\n    });\n  }\n  handleBinary = value => {\n    const decimalVal = this.props.convertToDecimal(value, 2, binary);\n    this.setState({\n      decimal: decimalVal,\n      hexadecimal: this.props.convertToBase(decimalVal, '', 16, hex),\n      binary: value,\n      base64: this.props.convertToBase(decimalVal, '', 64, base64)\n    });\n  }\n  handleBase64 = value => {\n    const decimalVal = this.props.convertToDecimal(value, 64, base64);\n    this.setState({\n      decimal: decimalVal,\n      hexadecimal: this.props.convertToBase(decimalVal, '', 16, hex),\n      binary: this.props.convertToBase(decimalVal, '', 2, binary),\n      base64: value\n    });\n  }\n  handleInputChange = (e, name) => {\n\n    if (name === 'Decimal') {\n      if (e.target.value.length > 0) {\n        if (e.target.value[e.target.value.length - 1] !== '0') {\n          if (!parseInt(e.target.value[e.target.value.length - 1])) {\n            return;\n          }\n        }\n      }\n      this.handleDecimal(e.target.value);\n    } else if (name === 'Binary') {\n      if (e.target.value.length > 0) {\n        if (e.target.value[e.target.value.length - 1] !== '0' && e.target.value[e.target.value.length - 1] !== '1') {\n          return;\n        }\n      }\n      this.handleBinary(e.target.value);\n    } else if (name === 'Hexadecimal') {\n      if (e.target.value.length > 0) {\n        if (!hexSet.has(e.target.value[e.target.value.length - 1])) {\n          return;\n        }\n      }\n      this.handleHex(e.target.value);\n    } else if (name === 'Base64') {\n      if (e.target.value.length > 0) {\n        if (!base64Set.has(e.target.value[e.target.value.length - 1])) {\n          return;\n        }\n      }\n      this.handleBase64(e.target.value);\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <br />\n        <InputField\n          input={this.state.decimal}\n          handleInputChange={this.handleInputChange}\n          inputName='Decimal'\n        />\n        <InputField\n          input={this.state.hexadecimal}\n          handleInputChange={this.handleInputChange}\n          inputName='Hexadecimal'\n        />\n        <InputField\n          input={this.state.binary}\n          handleInputChange={this.handleInputChange}\n          inputName='Binary'\n        />\n        <InputField\n          input={this.state.base64}\n          handleInputChange={this.handleInputChange}\n          inputName='Base64'\n        />\n      </div>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport './ColorInput.css';\n\nconst hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nconst rgb = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ',', ' '];\n\nconst makeSet = name => {\n  const mySet = new Set();\n  for (let i = 0; i < name.length; i++) {\n    mySet.add(name[i]);\n  }\n  return mySet;\n}\n\nconst hexSet = makeSet(hex);\nconst rgbSet = makeSet(rgb);\n\nclass ColorInput extends Component {\n  onInputChange = e => {\n    if (e.target.value.length > 0) {\n      if (this.props.isHex) {\n        if (!hexSet.has(e.target.value[e.target.value.length - 1])) {\n          return;\n        }\n      } else {\n        if (!rgbSet.has(e.target.value[e.target.value.length - 1])) {\n          return;\n        }\n      }\n    }\n    this.props.change(e.target.value, this.props.isHex);\n  }\n  render() {\n    return (\n      <div>\n        {this.props.isHex ? '#' : 'RGB('}<input className={`colorInput ${this.props.brightness}`} placeholder={this.props.isHex ? '339989' : '51, 153, 137'} onChange={this.onInputChange} value={this.props.inputVal} /> {!this.props.isHex && ')'}\n      </div>\n    );\n  }\n}\n\nexport default ColorInput;\n","import React, { Component } from 'react';\nimport ColorInput from '../ColorInput/ColorInput';\nimport './Colors.css'\n\nconst hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\nclass Colors extends Component {\n  constructor() {\n    super();\n    this.state = {\n      rgb: '',\n      hex: '',\n      brightness: 'light'\n    }\n  }\n  handleRGB = value => {\n    const arr = value.replace(/\\s/g, \"\").split(',');\n    if (arr.length > 3) {\n      return '';\n    }\n    let result = '';\n    arr.forEach(item => {\n      let hexVal = this.props.convertToBase(item, '', 16, hex);\n      if (hexVal.length === 1) {\n        hexVal = '0' + hexVal;\n      }\n      result += hexVal;\n    })\n    return result;\n  }\n  handleHex = value => {\n    const arr = [];\n    if (value.length === 3) {\n      value = value[0] + value[0] + value[1] + value[1] + value[2] + value[2];\n    }\n    for (let i = 0; i < value.length; i += 2) {\n      arr.push(value.slice(i, i + 2));\n    }\n    const convertedVals = arr.map(val => {\n      return this.props.convertToDecimal(val, 16, hex);\n    })\n    if (convertedVals[0] === undefined) {\n      return '';\n    }\n    const result = `${convertedVals[0]}, ${convertedVals[1] || 0}, ${convertedVals[2] || 0}`;\n    return result;\n  }\n  onColorChange = (value, isHex) => {\n    if (isHex) {\n      this.setState({\n        rgb: this.handleHex(value),\n        hex: value\n      }, () => {\n        this.setState({\n          brightness: this.getBrightness(this.state.rgb)\n        })\n      })\n    } else {\n      this.setState({\n        rgb: value,\n        hex: this.handleRGB(value)\n      }, () => {\n        this.setState({\n          brightness: this.getBrightness(this.state.rgb)\n        })\n      })\n    }\n  }\n  getBrightness = rgb => {\n    const arr = rgb.replace(/\\s/g, \"\").split(',');\n    const nums = arr.map(val => {\n      const number = parseInt(val);\n      if (number !== undefined && !isNaN(number)) {\n        return number;\n      } else {\n        return 100;\n      }\n    })\n    const avg = nums.reduce((a,b) => a + b, 0) / 3;\n    if (avg > 125) {\n      return 'dark';\n    } else {\n      return 'light';\n    }\n  }\n  getValidColor = color => {\n    if (color.length === 3 || color.length === 6) {\n      return true;\n    } else {\n      return false\n    }\n  }\n  render() {\n    return (\n      <div style={{backgroundColor: `#${this.getValidColor(this.state.hex) ? this.state.hex : '339989'}`}} className={`App colors ${this.state.brightness}`}>\n        {!this.getValidColor(this.state.hex) ? <h3>Write a Valid Color</h3> : <h3>Color has been Converted</h3>}\n        <ColorInput\n          change={this.onColorChange}\n          isHex={true}\n          inputVal={this.state.hex}\n          brightness={this.state.brightness}\n        />\n        <ColorInput\n          change={this.onColorChange}\n          isHex={false}\n          inputVal={this.state.rgb}\n          brightness={this.state.brightness}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Colors;\n","import React, { Component } from 'react';\nimport InputField from '../InputField/InputField';\n\nclass Distance extends Component {\n  constructor() {\n    super();\n    this.state = {\n      meter: '',\n      kilometer: '',\n      centimeter: '',\n      millimeter: '',\n      micrometer: '',\n      nanometer: ''\n    }\n  }\n  convertDistance = (value, constant) => {\n    if (value === '') {\n      return 0;\n    }\n    value = parseFloat(value);\n    return value * constant;\n  }\n  handleDistanceChange = (value, name) => {\n    let meters;\n    switch (name) {\n      case 'meter':\n        meters = value;\n        break;\n      case 'kilometer':\n        meters = this.convertDistance(value, 1000);\n        break;\n      case 'centimeter':\n        meters = this.convertDistance(value, 0.01)\n        break;\n      case 'millimeter':\n        meters = this.convertDistance(value, 0.001)\n        break;\n      case 'micrometer':\n        meters = this.convertDistance(value, 0.000001)\n        break;\n      case 'nanometer':\n        meters = this.convertDistance(value, 0.000000001)\n        break;\n      default:\n        meters = 0;\n    }\n    this.setState({\n      meter: meters,\n      kilometer: meters / 1000,\n      centimeter: meters * 100,\n      millimeter: meters * 1000,\n      micrometer: meters * 1000000,\n      nanometer: meters * 1000000000\n    })\n  }\n  handleInputChange = (e, name) => {\n    if (e.target.value.length > 0) {\n      if (e.target.value[e.target.value.length - 1] !== '0' && e.target.value[e.target.value.length - 1] !== '.') {\n        if (!parseInt(e.target.value[e.target.value.length - 1])) {\n          return;\n        }\n      }\n    }\n    this.handleDistanceChange(e.target.value, name);\n  }\n  render() {\n    return (\n      <div className='App'>\n        <br /> \n        {\n          Object.entries(this.state).map(([key, value]) => {\n            return (<InputField\n              inputName={key}\n              key={key}\n              input={value}\n              handleInputChange={this.handleInputChange}\n            />)\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default Distance;\n","export const data = [\n  [\n      {\n          \"char\": \" \",\n          \"unicode\": \"00100000\"\n      },\n      {\n          \"char\": \"!\",\n          \"unicode\": \"00100001\"\n      },\n      {\n          \"char\": \"\\\"\",\n          \"unicode\": \"00100010\"\n      },\n      {\n          \"char\": \"#\",\n          \"unicode\": \"00100011\"\n      },\n      {\n          \"char\": \"$\",\n          \"unicode\": \"00100100\"\n      },\n      {\n          \"char\": \"%\",\n          \"unicode\": \"00100101\"\n      },\n      {\n          \"char\": \"&amp;\",\n          \"unicode\": \"00100110\"\n      },\n      {\n          \"char\": \"'\",\n          \"unicode\": \"00100111\"\n      },\n      {\n          \"char\": \"(\",\n          \"unicode\": \"00101000\"\n      },\n      {\n          \"char\": \")\",\n          \"unicode\": \"00101001\"\n      },\n      {\n          \"char\": \"*\",\n          \"unicode\": \"00101010\"\n      },\n      {\n          \"char\": \"+\",\n          \"unicode\": \"00101011\"\n      },\n      {\n          \"char\": \",\",\n          \"unicode\": \"00101100\"\n      },\n      {\n          \"char\": \"-\",\n          \"unicode\": \"00101101\"\n      },\n      {\n          \"char\": \".\",\n          \"unicode\": \"00101110\"\n      },\n      {\n          \"char\": \"/\",\n          \"unicode\": \"00101111\"\n      },\n      {\n          \"char\": \"0\",\n          \"unicode\": \"00110000\"\n      },\n      {\n          \"char\": \"1\",\n          \"unicode\": \"00110001\"\n      },\n      {\n          \"char\": \"2\",\n          \"unicode\": \"00110010\"\n      },\n      {\n          \"char\": \"3\",\n          \"unicode\": \"00110011\"\n      },\n      {\n          \"char\": \"4\",\n          \"unicode\": \"00110100\"\n      },\n      {\n          \"char\": \"5\",\n          \"unicode\": \"00110101\"\n      },\n      {\n          \"char\": \"6\",\n          \"unicode\": \"00110110\"\n      },\n      {\n          \"char\": \"7\",\n          \"unicode\": \"00110111\"\n      },\n      {\n          \"char\": \"8\",\n          \"unicode\": \"00111000\"\n      },\n      {\n          \"char\": \"9\",\n          \"unicode\": \"00111001\"\n      },\n      {\n          \"char\": \":\",\n          \"unicode\": \"00111010\"\n      },\n      {\n          \"char\": \";\",\n          \"unicode\": \"00111011\"\n      },\n      {\n          \"char\": \"&lt;\",\n          \"unicode\": \"00111100\"\n      },\n      {\n          \"char\": \"=\",\n          \"unicode\": \"00111101\"\n      },\n      {\n          \"char\": \"&gt;\",\n          \"unicode\": \"00111110\"\n      },\n      {\n          \"char\": \"?\",\n          \"unicode\": \"00111111\"\n      },\n      {\n          \"char\": \"@\",\n          \"unicode\": \"01000000\"\n      },\n      {\n          \"char\": \"A\",\n          \"unicode\": \"01000001\"\n      },\n      {\n          \"char\": \"B\",\n          \"unicode\": \"01000010\"\n      },\n      {\n          \"char\": \"C\",\n          \"unicode\": \"01000011\"\n      },\n      {\n          \"char\": \"D\",\n          \"unicode\": \"01000100\"\n      },\n      {\n          \"char\": \"E\",\n          \"unicode\": \"01000101\"\n      },\n      {\n          \"char\": \"F\",\n          \"unicode\": \"01000110\"\n      },\n      {\n          \"char\": \"G\",\n          \"unicode\": \"01000111\"\n      },\n      {\n          \"char\": \"H\",\n          \"unicode\": \"01001000\"\n      },\n      {\n          \"char\": \"I\",\n          \"unicode\": \"01001001\"\n      },\n      {\n          \"char\": \"J\",\n          \"unicode\": \"01001010\"\n      },\n      {\n          \"char\": \"K\",\n          \"unicode\": \"01001011\"\n      },\n      {\n          \"char\": \"L\",\n          \"unicode\": \"01001100\"\n      },\n      {\n          \"char\": \"M\",\n          \"unicode\": \"01001101\"\n      },\n      {\n          \"char\": \"N\",\n          \"unicode\": \"01001110\"\n      },\n      {\n          \"char\": \"O\",\n          \"unicode\": \"01001111\"\n      },\n      {\n          \"char\": \"P\",\n          \"unicode\": \"01010000\"\n      },\n      {\n          \"char\": \"Q\",\n          \"unicode\": \"01010001\"\n      },\n      {\n          \"char\": \"R\",\n          \"unicode\": \"01010010\"\n      },\n      {\n          \"char\": \"S\",\n          \"unicode\": \"01010011\"\n      },\n      {\n          \"char\": \"T\",\n          \"unicode\": \"01010100\"\n      },\n      {\n          \"char\": \"U\",\n          \"unicode\": \"01010101\"\n      },\n      {\n          \"char\": \"V\",\n          \"unicode\": \"01010110\"\n      },\n      {\n          \"char\": \"W\",\n          \"unicode\": \"01010111\"\n      },\n      {\n          \"char\": \"X\",\n          \"unicode\": \"01011000\"\n      },\n      {\n          \"char\": \"Y\",\n          \"unicode\": \"01011001\"\n      },\n      {\n          \"char\": \"Z\",\n          \"unicode\": \"01011010\"\n      },\n      {\n          \"char\": \"[\",\n          \"unicode\": \"01011011\"\n      },\n      {\n          \"char\": \"\\\\\",\n          \"unicode\": \"01011100\"\n      },\n      {\n          \"char\": \"]\",\n          \"unicode\": \"01011101\"\n      },\n      {\n          \"char\": \"^\",\n          \"unicode\": \"01011110\"\n      },\n      {\n          \"char\": \"_\",\n          \"unicode\": \"01011111\"\n      },\n      {\n          \"char\": \"`\",\n          \"unicode\": \"01100000\"\n      },\n      {\n          \"char\": \"a\",\n          \"unicode\": \"01100001\"\n      },\n      {\n          \"char\": \"b\",\n          \"unicode\": \"01100010\"\n      },\n      {\n          \"char\": \"c\",\n          \"unicode\": \"01100011\"\n      },\n      {\n          \"char\": \"d\",\n          \"unicode\": \"01100100\"\n      },\n      {\n          \"char\": \"e\",\n          \"unicode\": \"01100101\"\n      },\n      {\n          \"char\": \"f\",\n          \"unicode\": \"01100110\"\n      },\n      {\n          \"char\": \"g\",\n          \"unicode\": \"01100111\"\n      },\n      {\n          \"char\": \"h\",\n          \"unicode\": \"01101000\"\n      },\n      {\n          \"char\": \"i\",\n          \"unicode\": \"01101001\"\n      },\n      {\n          \"char\": \"j\",\n          \"unicode\": \"01101010\"\n      },\n      {\n          \"char\": \"k\",\n          \"unicode\": \"01101011\"\n      },\n      {\n          \"char\": \"l\",\n          \"unicode\": \"01101100\"\n      },\n      {\n          \"char\": \"m\",\n          \"unicode\": \"01101101\"\n      },\n      {\n          \"char\": \"n\",\n          \"unicode\": \"01101110\"\n      },\n      {\n          \"char\": \"o\",\n          \"unicode\": \"01101111\"\n      },\n      {\n          \"char\": \"p\",\n          \"unicode\": \"01110000\"\n      },\n      {\n          \"char\": \"q\",\n          \"unicode\": \"01110001\"\n      },\n      {\n          \"char\": \"r\",\n          \"unicode\": \"01110010\"\n      },\n      {\n          \"char\": \"s\",\n          \"unicode\": \"01110011\"\n      },\n      {\n          \"char\": \"t\",\n          \"unicode\": \"01110100\"\n      },\n      {\n          \"char\": \"u\",\n          \"unicode\": \"01110101\"\n      },\n      {\n          \"char\": \"v\",\n          \"unicode\": \"01110110\"\n      },\n      {\n          \"char\": \"w\",\n          \"unicode\": \"01110111\"\n      },\n      {\n          \"char\": \"x\",\n          \"unicode\": \"01111000\"\n      },\n      {\n          \"char\": \"y\",\n          \"unicode\": \"01111001\"\n      },\n      {\n          \"char\": \"z\",\n          \"unicode\": \"01111010\"\n      },\n      {\n          \"char\": \"{\",\n          \"unicode\": \"01111011\"\n      },\n      {\n          \"char\": \"|\",\n          \"unicode\": \"01111100\"\n      },\n      {\n          \"char\": \"}\",\n          \"unicode\": \"01111101\"\n      },\n      {\n          \"char\": \"~\",\n          \"unicode\": \"01111110\"\n      }\n  ],\n  [\n    {\n        \"char\": \"&nbsp;\",\n        \"unicode\": \"1100001010100000\"\n    },\n    {\n        \"char\": \"¡\",\n        \"unicode\": \"1100001010100001\"\n    },\n    {\n        \"char\": \"¢\",\n        \"unicode\": \"1100001010100010\"\n    },\n    {\n        \"char\": \"£\",\n        \"unicode\": \"1100001010100011\"\n    },\n    {\n        \"char\": \"¤\",\n        \"unicode\": \"1100001010100100\"\n    },\n    {\n        \"char\": \"¥\",\n        \"unicode\": \"1100001010100101\"\n    },\n    {\n        \"char\": \"¦\",\n        \"unicode\": \"1100001010100110\"\n    },\n    {\n        \"char\": \"§\",\n        \"unicode\": \"1100001010100111\"\n    },\n    {\n        \"char\": \"¨\",\n        \"unicode\": \"1100001010101000\"\n    },\n    {\n        \"char\": \"©\",\n        \"unicode\": \"1100001010101001\"\n    },\n    {\n        \"char\": \"ª\",\n        \"unicode\": \"1100001010101010\"\n    },\n    {\n        \"char\": \"«\",\n        \"unicode\": \"1100001010101011\"\n    },\n    {\n        \"char\": \"¬\",\n        \"unicode\": \"1100001010101100\"\n    },\n    {\n        \"char\": \"­\",\n        \"unicode\": \"1100001010101101\"\n    },\n    {\n        \"char\": \"®\",\n        \"unicode\": \"1100001010101110\"\n    },\n    {\n        \"char\": \"¯\",\n        \"unicode\": \"1100001010101111\"\n    },\n    {\n        \"char\": \"°\",\n        \"unicode\": \"1100001010110000\"\n    },\n    {\n        \"char\": \"±\",\n        \"unicode\": \"1100001010110001\"\n    },\n    {\n        \"char\": \"²\",\n        \"unicode\": \"1100001010110010\"\n    },\n    {\n        \"char\": \"³\",\n        \"unicode\": \"1100001010110011\"\n    },\n    {\n        \"char\": \"´\",\n        \"unicode\": \"1100001010110100\"\n    },\n    {\n        \"char\": \"µ\",\n        \"unicode\": \"1100001010110101\"\n    },\n    {\n        \"char\": \"¶\",\n        \"unicode\": \"1100001010110110\"\n    },\n    {\n        \"char\": \"·\",\n        \"unicode\": \"1100001010110111\"\n    },\n    {\n        \"char\": \"¸\",\n        \"unicode\": \"1100001010111000\"\n    },\n    {\n        \"char\": \"¹\",\n        \"unicode\": \"1100001010111001\"\n    },\n    {\n        \"char\": \"º\",\n        \"unicode\": \"1100001010111010\"\n    },\n    {\n        \"char\": \"»\",\n        \"unicode\": \"1100001010111011\"\n    },\n    {\n        \"char\": \"¼\",\n        \"unicode\": \"1100001010111100\"\n    },\n    {\n        \"char\": \"½\",\n        \"unicode\": \"1100001010111101\"\n    },\n    {\n        \"char\": \"¾\",\n        \"unicode\": \"1100001010111110\"\n    },\n    {\n        \"char\": \"¿\",\n        \"unicode\": \"1100001010111111\"\n    },\n    {\n        \"char\": \"À\",\n        \"unicode\": \"1100001110000000\"\n    },\n    {\n        \"char\": \"Á\",\n        \"unicode\": \"1100001110000001\"\n    },\n    {\n        \"char\": \"Â\",\n        \"unicode\": \"1100001110000010\"\n    },\n    {\n        \"char\": \"Ã\",\n        \"unicode\": \"1100001110000011\"\n    },\n    {\n        \"char\": \"Ä\",\n        \"unicode\": \"1100001110000100\"\n    },\n    {\n        \"char\": \"Å\",\n        \"unicode\": \"1100001110000101\"\n    },\n    {\n        \"char\": \"Æ\",\n        \"unicode\": \"1100001110000110\"\n    },\n    {\n        \"char\": \"Ç\",\n        \"unicode\": \"1100001110000111\"\n    },\n    {\n        \"char\": \"È\",\n        \"unicode\": \"1100001110001000\"\n    },\n    {\n        \"char\": \"É\",\n        \"unicode\": \"1100001110001001\"\n    },\n    {\n        \"char\": \"Ê\",\n        \"unicode\": \"1100001110001010\"\n    },\n    {\n        \"char\": \"Ë\",\n        \"unicode\": \"1100001110001011\"\n    },\n    {\n        \"char\": \"Ì\",\n        \"unicode\": \"1100001110001100\"\n    },\n    {\n        \"char\": \"Í\",\n        \"unicode\": \"1100001110001101\"\n    },\n    {\n        \"char\": \"Î\",\n        \"unicode\": \"1100001110001110\"\n    },\n    {\n        \"char\": \"Ï\",\n        \"unicode\": \"1100001110001111\"\n    },\n    {\n        \"char\": \"Ð\",\n        \"unicode\": \"1100001110010000\"\n    },\n    {\n        \"char\": \"Ñ\",\n        \"unicode\": \"1100001110010001\"\n    },\n    {\n        \"char\": \"Ò\",\n        \"unicode\": \"1100001110010010\"\n    },\n    {\n        \"char\": \"Ó\",\n        \"unicode\": \"1100001110010011\"\n    },\n    {\n        \"char\": \"Ô\",\n        \"unicode\": \"1100001110010100\"\n    },\n    {\n        \"char\": \"Õ\",\n        \"unicode\": \"1100001110010101\"\n    },\n    {\n        \"char\": \"Ö\",\n        \"unicode\": \"1100001110010110\"\n    },\n    {\n        \"char\": \"×\",\n        \"unicode\": \"1100001110010111\"\n    },\n    {\n        \"char\": \"Ø\",\n        \"unicode\": \"1100001110011000\"\n    },\n    {\n        \"char\": \"Ù\",\n        \"unicode\": \"1100001110011001\"\n    },\n    {\n        \"char\": \"Ú\",\n        \"unicode\": \"1100001110011010\"\n    },\n    {\n        \"char\": \"Û\",\n        \"unicode\": \"1100001110011011\"\n    },\n    {\n        \"char\": \"Ü\",\n        \"unicode\": \"1100001110011100\"\n    },\n    {\n        \"char\": \"Ý\",\n        \"unicode\": \"1100001110011101\"\n    },\n    {\n        \"char\": \"Þ\",\n        \"unicode\": \"1100001110011110\"\n    },\n    {\n        \"char\": \"ß\",\n        \"unicode\": \"1100001110011111\"\n    },\n    {\n        \"char\": \"à\",\n        \"unicode\": \"1100001110100000\"\n    },\n    {\n        \"char\": \"á\",\n        \"unicode\": \"1100001110100001\"\n    },\n    {\n        \"char\": \"â\",\n        \"unicode\": \"1100001110100010\"\n    },\n    {\n        \"char\": \"ã\",\n        \"unicode\": \"1100001110100011\"\n    },\n    {\n        \"char\": \"ä\",\n        \"unicode\": \"1100001110100100\"\n    },\n    {\n        \"char\": \"å\",\n        \"unicode\": \"1100001110100101\"\n    },\n    {\n        \"char\": \"æ\",\n        \"unicode\": \"1100001110100110\"\n    },\n    {\n        \"char\": \"ç\",\n        \"unicode\": \"1100001110100111\"\n    },\n    {\n        \"char\": \"è\",\n        \"unicode\": \"1100001110101000\"\n    },\n    {\n        \"char\": \"é\",\n        \"unicode\": \"1100001110101001\"\n    },\n    {\n        \"char\": \"ê\",\n        \"unicode\": \"1100001110101010\"\n    },\n    {\n        \"char\": \"ë\",\n        \"unicode\": \"1100001110101011\"\n    },\n    {\n        \"char\": \"ì\",\n        \"unicode\": \"1100001110101100\"\n    },\n    {\n        \"char\": \"í\",\n        \"unicode\": \"1100001110101101\"\n    },\n    {\n        \"char\": \"î\",\n        \"unicode\": \"1100001110101110\"\n    },\n    {\n        \"char\": \"ï\",\n        \"unicode\": \"1100001110101111\"\n    },\n    {\n        \"char\": \"ð\",\n        \"unicode\": \"1100001110110000\"\n    },\n    {\n        \"char\": \"ñ\",\n        \"unicode\": \"1100001110110001\"\n    },\n    {\n        \"char\": \"ò\",\n        \"unicode\": \"1100001110110010\"\n    },\n    {\n        \"char\": \"ó\",\n        \"unicode\": \"1100001110110011\"\n    },\n    {\n        \"char\": \"ô\",\n        \"unicode\": \"1100001110110100\"\n    },\n    {\n        \"char\": \"õ\",\n        \"unicode\": \"1100001110110101\"\n    },\n    {\n        \"char\": \"ö\",\n        \"unicode\": \"1100001110110110\"\n    },\n    {\n        \"char\": \"÷\",\n        \"unicode\": \"1100001110110111\"\n    },\n    {\n        \"char\": \"ø\",\n        \"unicode\": \"1100001110111000\"\n    },\n    {\n        \"char\": \"ù\",\n        \"unicode\": \"1100001110111001\"\n    },\n    {\n        \"char\": \"ú\",\n        \"unicode\": \"1100001110111010\"\n    },\n    {\n        \"char\": \"û\",\n        \"unicode\": \"1100001110111011\"\n    },\n    {\n        \"char\": \"ü\",\n        \"unicode\": \"1100001110111100\"\n    },\n    {\n        \"char\": \"ý\",\n        \"unicode\": \"1100001110111101\"\n    },\n    {\n        \"char\": \"þ\",\n        \"unicode\": \"1100001110111110\"\n    },\n    {\n        \"char\": \"ÿ\",\n        \"unicode\": \"1100001110111111\"\n    }\n  ]\n];\n","import React from 'react';\nimport './ListItem.css';\n\nconst ListItem = ({ char, binary }) => {\n  return (\n    <div className='listItem'>\n      \"{char}\" : {binary}\n    </div>\n  );\n}\n\nexport default ListItem;\n","import React, {Component} from 'react';\nimport InputField from '../InputField/InputField';\nimport { data } from './UnicodeData';\nimport ListItem from '../ListItem/ListItem';\nimport './Unicode.css';\n\nclass Unicode extends Component {\n  constructor() {\n    super();\n    this.state = {\n      binary: '',\n      unicode: '',\n      showList: false\n    }\n  }\n  handleToBinary = (value) => {\n    let result = '';\n    const chars = value.target.value.split('');\n    chars.forEach(char => {\n      for (let i = 0; i < data[0].length; i++) {\n        if (data[0][i].char === char) {\n          result += data[0][i].unicode;\n          break;\n        }\n      }\n      for (let i = 0; i < data[1].length; i++) {\n        if (data[1][i].char === char) {\n          result += data[1][i].unicode;\n          break;\n        }\n      }\n    });\n    this.setState({\n      binary: result,\n      unicode: value.target.value\n    })\n  }\n  handleToUnicode = (value) => {\n    let result = '';\n    let input = value.target.value.replace(/\\s/g, \"\");\n    if (input.length % 8 === 0 && input.length !== 0) {\n      const bytes = input.match(/.{1,8}/g);\n      for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i][0] === '0') {\n          for (let j = 0; j < data[0].length; j++) {\n            if (bytes[i] === data[0][j].unicode) {\n              result += data[0][j].char\n            }\n          }\n        } else if (bytes[i][0] === '1') {\n          const twoBytes = bytes[i] + bytes[i + 1];\n          for (let j = 0; j < data[1].length; j++) {\n            if (twoBytes === data[1][j].unicode) {\n              result += data[1][j].char\n            }\n          }\n          i++;\n        }\n      }\n      this.setState({\n        binary: value.target.value,\n        unicode: result\n      })\n    } else {\n      this.setState({\n        binary: value.target.value,\n        unicode: ''\n      })\n    }\n  }\n  closeList = () => {\n    this.setState({\n      showList: false\n    })\n  }\n  openList = () => {\n    this.setState({\n      showList: true\n    })\n  }\n  render() {\n    return (\n      <div className='App'>\n        <br />\n        <InputField\n          inputName='Binary'\n          input={this.state.binary}\n          handleInputChange={this.handleToUnicode}\n        />\n        <InputField\n          inputName='Unicode'\n          input={this.state.unicode}\n          handleInputChange={this.handleToBinary}\n        />\n        <div className='unicode'>\n          {\n            this.state.unicode.length === 0\n            ?\n            <h3>Write Something Valid</h3>\n            :\n            <h3>Input has been Converted</h3>\n          }\n          {\n            this.state.showList\n            ?\n            <p onClick={this.closeList}>Close List</p>\n            :\n            <p onClick={this.openList}>Want a list of characters?</p>\n          }\n          {\n            this.state.showList\n            &&\n            <div>\n              {data[0].map(item => {\n                return <ListItem char={item.char} binary={item.unicode} key={item.unicode} />\n              })}\n              {data[1].map(item => {\n                return <ListItem char={item.char} binary={item.unicode} key={item.unicode} />\n              })}\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Unicode;\n","import React, { Component } from 'react';\nimport Header from './Components/Header/Header';\nimport Base from './Components/Base/Base';\nimport Colors from './Components/Colors/Colors';\nimport Distance from './Components/Distance/Distance';\nimport Unicode from './Components/Unicode/Unicode';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      route: 'base'\n    }\n  }\n  convertToBase = (value, result, base, baseName) => {\n    if (value === '') {\n      return '';\n    }\n    value = parseInt(value);\n    const newValue = Math.floor(value / base);\n    const remainder = value % base;\n    const curResult = baseName[remainder] + result;\n    if (newValue >= 1) {\n      return this.convertToBase(newValue, curResult, base, baseName);\n    } else {\n      return curResult;\n    }\n  }\n  convertToDecimal = (value, base, baseName) => {\n    if (value === '') {\n      return '';\n    }\n    let newValue = value.toString().split('');\n    newValue = newValue.reverse();\n    let result = 0;\n    newValue.forEach((item, i) => {\n      baseName.forEach((char, index) => {\n        if (char === item) {\n          result += (index * base**i);\n        }\n      })\n    })\n    return result;\n  }\n  onRouteChange = route => {\n    this.setState({ route });\n  }\n  render() {\n    return (\n      <div>\n        <Header\n          from={this.state.route}\n          onRouteChange={this.onRouteChange}\n          route={this.state.route}\n        />\n        <div>\n          {\n            this.state.route === 'base'\n            &&\n            <Base\n              convertToBase={this.convertToBase}\n              convertToDecimal={this.convertToDecimal}\n            />\n          }\n          {\n            this.state.route === 'colors'\n            &&\n            <Colors\n              convertToBase={this.convertToBase}\n              convertToDecimal={this.convertToDecimal}\n            />\n          }\n          {\n            this.state.route === 'distance'\n            &&\n            <Distance />\n          }\n          {\n            this.state.route === 'unicode'\n            &&\n            <Unicode />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}